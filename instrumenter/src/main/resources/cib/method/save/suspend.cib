ctx {
    markerType;
    point;
    currentLineNumber;
    lva;
    os;
    frame;
    container;
    className;
    index;
    methodContext;
};

ext {
    com.engineersbox.continuity.instrumenter.method.bytecode.SaveOperations;
    com.engineersbox.continuity.core.annotation.BytecodeInternal $ Accessor;
    com.engineersbox.continuity.core.state.ContinuationState;
};

if (ctx::currentLineNumber != null) {
    std::lineNumber(ctx::currentLineNumber)
};
ext::SaveOperations->saveVariables(
    ctx::markerType,
    ctx::index,
    ctx::lva,
    ctx::os,
    ctx::container,
    ctx::frame
);
std::debugMarker(
    ctx::markerType,
    "Pushing method state snapshot"
);
fn instantiateMethodState() {
    std::newInstance(
        ext::Accessor->getConstructor("MethodState.init"),
        std::constant(ctx::className),
        std::constant(ctx::methodContext->signature().id()),
        std::constant(ctx::index),
        std::loadVar(ctx::container)
    );
};
let contArgVar = std::loadVar(ctx::methodContext->continuityVariables().continuationArgVar());
std::call(
    ext::Accessor->getMethod("Continuation.pushNewMethodState"),
    let.contArgVar,
    fn.instantiateMethodState()
);
std::debug(
    ctx::markerType,
    "Setting save state"
);
std::call(
    ext::Accessor->getMethod("Continuation.setState"),
    let.contArgVar,
    std::constant(ctx::ContinuationState.SAVING->ordinal())
);
std::debug(
    ctx::markerType,
    "Returning dummy (none if void)"
);
std::dummyReturn(ctx::methodContext->signature().descriptor().getReturnType());
std::label(ctx::point.getContinueExecutionLabel());